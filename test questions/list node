class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def sortList(head):
    if not head or not head.next:
        return head
    
    mid = get_mid(head)
    left = sortList(head)
    right = sortList(mid)
    
    return merge(left, right)

def get_mid(head):
    slow = head
    fast = head
    
    while fast.next and fast.next.next:
        slow = slow.next
        fast = fast.next.next
    
    mid = slow.next
    slow.next = None
    
    return mid

def merge(left, right):
    dummy = ListNode()
    curr = dummy
    
    while left and right:
        if left.val < right.val:
            curr.next = left
            left = left.next
        else:
            curr.next = right
            right = right.next
        
        curr = curr.next
    
    curr.next = left or right
    
    return dummy.next
